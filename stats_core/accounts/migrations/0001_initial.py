# Generated by Django 4.2.11 on 2024-04-15 21:24

from django.db import migrations, models

import stats_core.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status'
                    )
                ),
                (
                    'account_number',
                    models.CharField(
                        max_length=64,
                        primary_key=True,
                        serialize=False,
                        validators=[stats_core.core.validators.HexStringValidator(64)]
                    )
                ),
                ('balance', models.PositiveBigIntegerField(default=0)),
                ('display_image', models.URLField(blank=True)),
                ('display_name', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text=
                        'The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups'
                    )
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions'
                    )
                ),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
